type Query {
  allUsers: [User!]!
  oneUser(username: String!): User!
  allQuizzes: [Quiz!]!
  oneQuiz(slug: String!): Quiz!
  checkQuizSlug(slug: String!): ResponseMessage!
  allQuestions: [Question!]!
  oneQuestion(id: ID!): Question!
  checkAnswer(questionId: ID!, answerId: ID): AnswerMessage!
  appData: AppData!
}

type Mutation {
  toggleTheme(theme: String!): ResponseMessage!
  # User
  createUser(
    name: String!
    email: String!
    username: String!
    password: String!
  ): User!
  updateUser(id: ID!, name: String, email: String, username: String): User!
  updatePassword(
    username: String!
    password: String!
    confirmPassword: String!
    oldPassword: String!
  ): User!
  deleteUser(id: ID!): ResponseMessage!
  # Quiz
  createQuiz(
    title: String!
    description: String
    featuredImage: String
    questionCount: Int
    attempts: Int
    tags: [String]
  ): Quiz!
  takeQuiz(id: ID!): Quiz!
  updateQuiz(
    id: ID!
    title: String
    description: String
    featuredImage: String
    questionCount: Int
    attempts: Int
    tags: [String]
  ): Quiz!
  deleteQuiz(id: ID!): ResponseMessage!
  # Question
  createQuestion(
    question: String!
    answers: [AnswerInput]!
    answerCount: Int!
    featuredImage: String
    explanation: String
    quiz: ID!
  ): Question!
  answerQuestion(questionId: ID!, answerId: ID!): ResponseMessage!
  updateQuestion(
    id: ID!
    question: String
    answers: [AnswerInput]
    answerCount: Int
    featuredImage: String
  ): Question!
  deleteQuestion(id: ID!): ResponseMessage!
}

type User {
  id: ID!
  name: String!
  email: String!
  username: String!
}

type Quiz {
  id: ID!
  title: String!
  slug: String!
  description: String
  featuredImage: String
  questionCount: Int
  attempts: Int
  tags: [String]
  user: User!
  questions: [Question]
}

type Question {
  id: ID!
  question: String!
  answers: [Answer!]!
  answerCount: Int!
  explanation: String
  featuredImage: String
  answerId: ID
  prevQuestion: ID
  nextQuestion: ID
  quiz: Quiz!
}

type Answer {
  id: ID!
  answer: String!
  correct: Boolean!
}

input AnswerInput {
  answer: String!
  correct: Boolean!
}

type AnswerMessage {
  correctAnswer: Answer!
  message: String!
}

type AppData {
  theme: String
  activeUser: User
  activeQuiz: String
  activeQuizTitle: String
  answeredQuestions: [Question]
  remainingQuestions: [Question]
}

type ResponseMessage {
  message: String!
}
